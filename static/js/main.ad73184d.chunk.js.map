{"version":3,"sources":["components/todoReducer.js","components/TodoListItem.js","components/TodoList.js","components/TodoAdd.js","hooks/useForm.js","components/TodoApp.js","index.js"],"names":["todoReducer","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","payload","filter","todo","id","map","objectSpread","done","TodoListItem","_ref","index","handleDelete","handleToggle","react_default","a","createElement","key","className","onClick","desc","TodoList","todos","i","TodoListItem_TodoListItem","TodoAdd","handleAddTodo","_useForm","initialState","_useState","useState","_useState2","slicedToArray","values","setValues","target","defineProperty","name","value","useForm","description","_useForm2","handleInputChange","reset","Fragment","onSubmit","e","preventDefault","trim","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","_useReducer","useReducer","_useReducer2","dispatch","useEffect","setItem","stringify","TodoList_TodoList","todoId","TodoAdd_TodoAdd","ReactDOM","render","TodoApp_TodoApp","document","getElementById"],"mappings":"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","file":"static/js/main.ad73184d.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.payload];\n\n    case \"delete\":\n      return state.filter((todo) => todo.id !== action.payload);\n\n    case \"toggle\":\n      return state.map((todo) =>\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n      );\n\n    case \"toggle-old\":\n      return state.map((todo) => {\n        if (todo.id === action.payload) {\n          return {\n            ...todo,\n            done: !todo.done,\n          };\n        } else {\n          return todo;\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\n\nexport const TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\n\n\n    return (\n        <li\n            key={ todo.id }\n            className=\"list-group-item\"\n        >  \n            <p \n                className={ `${ todo.done && 'complete' }` }\n                onClick={ () => handleToggle( todo.id ) }\n            > \n                { index + 1}. { todo.desc }   \n            </p>\n            <button\n                className=\"btn btn-danger\"\n                onClick={ () => handleDelete( todo.id ) }\n            >\n                Borrar\n            </button>\n        </li>\n    )\n}\n","import React from \"react\";\nimport { TodoListItem } from \"./TodoListItem\";\n\nexport const TodoList = ({ todos, handleDelete, handleToggle }) => {\n  return (\n    <ul className=\"list-group list-group-flush\">\n      {todos.map((todo, i) => (\n        <TodoListItem\n          key={todo.id}\n          todo={todo}\n          index={i}\n          handleDelete={handleDelete}\n          handleToggle={handleToggle}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React from \"react\";\nimport { useForm } from \"../hooks/useForm\";\n\nexport const TodoAdd = ({ handleAddTodo }) => {\n  const [{ description }, handleInputChange, reset] = useForm({\n    description: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (description.trim().length <= 1) {\n      return;\n    }\n\n    const newTodo = {\n      id: new Date().getTime(),\n      desc: description,\n      done: false,\n    };\n\n    handleAddTodo(newTodo);\n    reset();\n  };\n\n  return (\n    <>\n      <h4>Agregar TODOLIST</h4>\n      <hr />\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"description\"\n          className=\"form-control\"\n          placeholder=\"Entrada\"\n          autoComplete=\"off\"\n          value={description}\n          onChange={handleInputChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary mt-1 btn-block\"\n        >\n          Guardar\n        </button>\n      </form>\n    </>\n  );\n};\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { todoReducer } from \"./todoReducer\";\nimport { TodoList } from \"./TodoList\";\nimport { TodoAdd } from \"./TodoAdd\";\nimport \"./styles.css\";\n\nconst init = () => {\n  return JSON.parse(localStorage.getItem(\"todos\")) || [];\n};\n\nexport const TodoApp = () => {\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const handleDelete = (todoId) => {\n    const action = {\n      type: \"delete\",\n      payload: todoId,\n    };\n\n    dispatch(action);\n  };\n\n  const handleToggle = (todoId) => {\n    dispatch({\n      type: \"toggle\",\n      payload: todoId,\n    });\n  };\n\n  const handleAddTodo = (newTodo) => {\n    dispatch({\n      type: \"add\",\n      payload: newTodo,\n    });\n  };\n\n  return (\n    <div>\n      <h1>React Todos - REST ( {todos.length} ) </h1>\n\n      <hr />\n      <h3> Tachar o desmarcar directamente en el elemento</h3>\n      <h6>Realizado con LocalStore simulando un BACKEND</h6>\n\n      <hr />\n\n      <div className=\"row\">\n        <div className=\"col-7\">\n          <TodoList\n            todos={todos}\n            handleDelete={handleDelete}\n            handleToggle={handleToggle}\n          />\n        </div>\n\n        <div className=\"col-5\">\n          <TodoAdd handleAddTodo={handleAddTodo} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { TodoApp } from \"./components/TodoApp\";\n\nReactDOM.render(<TodoApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}